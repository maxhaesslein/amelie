#!/usr/bin/python


# Amelie v3, 2023
# by maxhaesslein, 2018-2023
# www.maxhaesslein.de


# dependencies: opencv, picamera2
# sudo apt install python3-opencv python3-picamera2
# sudo apt install xserver-xorg xinit
#
# start with:
# startx /home/mh/amelie/amelie


import cv2
from picamera2 import Picamera2
from libcamera import controls
import time
import cups
import sys
import os


outputDirectory = "/home/mh/amelie/images/"
tempDirectory =   "/home/mh/amelie/temp/"


windowName = "Amelie"
windowWidth = 720
windowHeight = 720

# max resolution of camera module 3 is 4608x2592
captureWidth = 2592
captureHeight = 2592

printWidth = 384
printHeight = 384


continuousAutofocus = True



print('amelie v.3')



# setup printer
cupsConnection = cups.Connection()
cups.setUser('mh')
printers = cupsConnection.getPrinters()
printerName = False
for printer in printers:
    if str(printer) == 'ZJ-58':
        printerName = str(printer)
if not printerName:
    print('Printer not found.')
    sys.exit()

# setup picam

picam = Picamera2()

picam.configure(
    picam.create_still_configuration(
        main={
            "size": (captureWidth, captureHeight),
            "format": "RGB888",
        },
        lores={
            "size": (windowWidth, windowHeight)
            # lores format is always YUV420
        },
    )
)

picam.start()

if continuousAutofocus:
    picam.set_controls({"AfMode": controls.AfModeEnum.Continuous})


# setup window
cv2.namedWindow( windowName, cv2.WINDOW_NORMAL )
cv2.resizeWindow( windowName, windowWidth, windowHeight )
cv2.setWindowProperty( windowName, cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN )


printJob = False

# main loop
while True:
    preview = picam.capture_array("lores")

    # because the lores stream is always YUV420, we need to convert it:
    im = cv2.cvtColor( preview, cv2.COLOR_YUV420p2RGB )
    # and crop it:
    im = im[0:windowWidth, 0:windowHeight]


    cv2.imshow( windowName, im )
    key = cv2.waitKey(1)
    if key == 27: # escape
        break
    elif key == 32: # space

        timestamp = str(int(time.time()))
        fileName = outputDirectory+timestamp+'.jpg'
        picam.capture_file(fileName, wait=True)

        printImage = cv2.imread( fileName, cv2.IMREAD_GRAYSCALE)
        printImage = cv2.resize( printImage, (printWidth, printHeight) )

        printFileName = tempDirectory+timestamp+'_print.jpg'
        cv2.imwrite( printFileName, printImage )

        #printJob = cupsConnection( printerName, printFileName, windowName, {'orientation-requested': '3'})

        #os.remove( printFileName )

    elif key == 13: # enter
        picam.autofocus_cycle(wait=False) # trigger autofocus async

    

